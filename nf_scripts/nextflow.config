nextflow.enable.dsl=2

params {
  input_reads = ""
  directory_out = ""
  MGE_db = ""
  container = ""
  executor = ""
  storeDir = ""
  report_path = ""
  MGE_db_path = ""
  ARG_db_path = ""
  phenotype = ""
  scratch_dir = ""
  cluster_options = ""
  container = ""
  run_id = ""
  trimgalore_path = ""
  MGE_db_raw = ""
}

profiles {
    server {
        process.cache = true 
        process.container = params.container
        process.executor = 'local'
        apptainer.enabled = true
        apptainer.autoMounts = true

    }

    cluster {
        process.cache = true
        process.container = params.container
        process.executor = 'slurm'
        process.clusterOptions = params.cluster_options
        process.scratch = true
        apptainer.enabled = true
        apptainer.autoMounts = true   
    }
}

process {

    withName:TrimGalore {
        cpus = 10
        time = { 1.hours * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}TrimGalore/"
        publishDir = "${params.directory_out}TrimGalore/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:Diamond {
        cpus = 10
        time = { 1.hours * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}Diamond/"
        publishDir = "${params.directory_out}Diamond/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:MetaxaQR {
        cpus = 10
        time = { 8.hours * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}MetaxaQR/"
        publishDir = "${params.directory_out}MetaxaQR/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:MetaxaQR_ttt {
        cpus = 1
        time = { 20.minutes * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}MetaxaQR_ttt/"
        publishDir = "${params.directory_out}MetaxaQR_ttt/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:MetaxaQR_dc {
        cpus = 1
        time = { 20.minutes * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}MetaxaQR_dc/"
        publishDir = "${params.directory_out}MetaxaQR_dc/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:Gene_Normalization {
        cpus = 15
        time = { 1.hours * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}Gene_Normalization/"
        publishDir = "${params.directory_out}Gene_Normalization/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:Build_ResFinder_db {
        cpus = 1
        time = { 10.minutes * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}ResFinder/"
        publishDir = "${params.directory_out}ResFinder/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:Build_mobileOG_db {
        cpus = 1
        time = { 10.minutes * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}mobileOG/"
        publishDir = "${params.directory_out}mobileOG/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }

    withName:MultiQC {
        cpus = 1
        time = { 15.minutes * Math.pow(1.5, task.attempt - 1) }
        storeDir = "${params.storeDir}MultiQC/"
        publishDir = "${params.directory_out}MultiQC/"
        maxRetries = 3
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    }
}

cleanup = true